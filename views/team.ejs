<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Referral | FOURx</title>
    <!-- Local Tailwind CSS -->
    <link href="http://109.199.117.228:3000/team.css" rel="stylesheet">
    <link rel="shortcut icon" href="/logo.svg" type="image/x-icon">

    <style>
        /* Maintain existing animations from home page */
        @keyframes marquee {
            0% {
                transform: translateX(100%);
            }
            100% {
                transform: translateX(-100%);
            }
        }

        .marquee {
            animation: marquee 20s linear infinite;
        }

        /* Notification style */
        .notification {
            position: fixed;
            top: 1rem;
            right: 1rem;
            background-color: #10B981;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
            z-index: 100;
            display: flex;
            align-items: center;
            transform: translateX(150%);
            transition: transform 0.3s ease-out;
        }

        .notification.show {
            transform: translateX(0);
        }
    </style>
</head>

<body class="pt-16 pb-20 bg-gray-50">
    <!-- Notification Element -->
    <div id="notification" class="notification hidden">
        <span id="notification-message"></span>
    </div>

    <!-- Consistent Header -->
    <header class="fixed w-full top-0 z-50 bg-white shadow-md">
        <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-16">
                <!-- Logo matching home page -->
                <div class="flex-shrink-0">
                    <a href="#" class="flex items-center">
                        <img id="imagebtn" class="h-16 w-auto" src="logo.svg" alt="Logo" width="64" height="64">
                        <span class="ml-2 text-xl font-bold text-blue-800">FOURx</span>
                    </a>
                </div>

                <!-- Desktop Navigation matching home page -->
                <div class="hidden md:flex items-center space-x-8">
                    <a href="#" id="homebtn33" class="text-gray-600 hover:text-blue-600 transition duration-300">Home</a>
                    <a href="#" id="aboutbtn33" class="text-gray-600 hover:text-blue-600 transition duration-300">About</a>
                    <a href="#" id="assetsbtn33" class="text-gray-600 hover:text-blue-600 transition duration-300">Assets</a>
                </div>

                <!-- Mobile Menu Button -->
                <div class="md:hidden">
                    <button id="menu-btn" class="text-gray-600 hover:text-blue-600 focus:outline-none"
                        aria-label="Toggle menu">
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 6h16M4 12h16m-7 6h7" />
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Mobile Menu matching home page -->
            <div id="mobile-menu" class="hidden md:hidden bg-white shadow-lg">
                <a href="#" id="homebtn333" class="block px-4 py-2 text-gray-600 hover:bg-gray-100">Home</a>
                <a href="#" id="assetsbtn333" class="block px-4 py-2 text-gray-600 hover:bg-gray-100">Assets</a>
                <a href="#" id="aboutbtn333" class="block px-4 py-2 text-gray-600 hover:bg-gray-100">About</a>
            </div>
        </nav>
    </header>

    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Referral Code Section -->
        <div class="bg-white rounded-2xl shadow-lg p-6 mb-8">
            <h2 class="text-2xl font-bold text-gray-800 mb-4">Your Referral Code</h2>
            <div class="flex items-center justify-between bg-blue-50 p-4 rounded-lg">
                <span id="referralCodeText" class="text-lg font-mono text-blue-600">
                    <%= user.referralCode %>
                </span>
                <button id="copyReferralBtn"
                    class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                    Copy Code
                </button>
            </div>
        </div>

        <!-- Referral Usage Statistics -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-lg font-semibold text-gray-700 mb-2">Total Referrals</h3>
                <p class="text-3xl font-bold text-blue-600">
                    <%= user.totalReferrals %>
                </p>
            </div>
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-lg font-semibold text-gray-700 mb-2">Valid Members</h3>
                <p class="text-3xl font-bold text-green-600">
                    <%= user.activeReferrals %>
                </p>
            </div>
            <div class="bg-white rounded-2xl shadow-lg p-6">
                <h3 class="text-lg font-semibold text-gray-700 mb-2">Referral Earnings</h3>
                <p class="text-3xl font-bold text-yellow-600">
                    USDT <%= user.referralEarnings.toFixed(2) %>
                </p>
            </div>
        </div>

        <!-- Referred Members Table -->
        <div class="bg-white rounded-2xl shadow-lg p-6">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Referred Members</h2>
            <div class="overflow-x-auto">
                <table class="min-w-full">
                    <thead>
                        <tr class="border-b">
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-600">Member</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-600">Username</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-600">Joined Date</th>
                            <th class="px-4 py-3 text-left text-sm font-medium text-gray-600">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (user.referredUsers && user.referredUsers.length > 0) { %>
                            <% user.referredUsers.forEach(member => { 
                                const hasActiveDeposit = member.depositRequests && 
                                    member.depositRequests.some(d => d.status === 'approved');
                                const joinDate = new Date(member.createdAt).toLocaleDateString();
                            %>
                                <tr class="border-b hover:bg-gray-50 transition-colors">
                                    <td class="px-4 py-3 flex items-center">
                                        <span class="text-gray-700">
                                            <%= member.name %>
                                        </span>
                                    </td>
                                    <td class="px-4 py-3 text-gray-600">
                                        @<%= member.username %>
                                    </td>
                                    <td class="px-4 py-3 text-gray-600">
                                        <%= joinDate %>
                                    </td>
                                    <td class="px-4 py-3">
                                        <span class="<%= hasActiveDeposit ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %> px-3 py-1 rounded-full text-sm">
                                            <%= hasActiveDeposit ? 'Active' : 'Pending' %>
                                        </span>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="4" class="px-4 py-6 text-center text-gray-500">
                                    No referred members yet. Share your referral code to earn bonuses!
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </main>

    <!-- Footer Navigation with SVG icons -->
    <nav class="fixed bottom-0 w-full bg-white shadow-[0_-2px_10px_rgba(0,0,0,0.1)] flex justify-around py-3 z-50">
        <a href="#" id="homebtn" class="flex flex-col items-center text-blue-700 px-2">
            <svg class="h-6 w-6 text-blue-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
            </svg>
            <span class="text-xs md:text-sm">Home</span>
        </a>
        <a href="#" id="assetsbtn" class="flex flex-col items-center text-gray-500 hover:text-blue-600 px-2">
            <svg class="h-6 w-6 text-blue-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
            </svg>
            <span class="text-xs md:text-sm">Assets</span>
        </a>
        <a href="#" id="teambtn2" class="flex flex-col items-center text-gray-500 hover:text-blue-600 px-2">
            <svg class="h-6 w-6 text-blue-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
            </svg>
            <span class="text-xs md:text-sm">Team</span>
        </a>
        <a href="#" id="profilebtn"
            class="flex flex-col items-center text-gray-500 hover:text-blue-600 px-2 transition-colors duration-200 group"
            aria-label="User profile">
            <svg class="h-6 w-6 text-blue-700 group-hover:text-blue-600" fill="none" viewBox="0 0 24 24"
                stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            <span class="text-xs md:text-sm group-hover:text-blue-600">Profile</span>
        </a>
    </nav>

    <script>
        // Notification system
        function showNotification(message, isSuccess = true) {
            const notification = document.getElementById('notification');
            const notificationMessage = document.getElementById('notification-message');
            
            notificationMessage.textContent = message;
            notification.className = isSuccess 
                ? 'notification bg-green-500 text-white' 
                : 'notification bg-red-500 text-white';
            
            notification.classList.remove('hidden');
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    notification.classList.add('hidden');
                }, 300);
            }, 3000);
        }

        // Copy Referral Code Function with fallback
        function copyReferralCode() {
            const code = document.getElementById('referralCodeText').textContent.trim();
            
            if (!code) {
                showNotification('No referral code found', false);
                return;
            }

            // Modern clipboard API
            if (navigator.clipboard) {
                navigator.clipboard.writeText(code).then(() => {
                    showNotification(`Copied: ${code}`);
                }).catch(err => {
                    console.error('Failed to copy: ', err);
                    fallbackCopyTextToClipboard(code);
                });
            } else {
                // Fallback for older browsers
                fallbackCopyTextToClipboard(code);
            }
        }

        function fallbackCopyTextToClipboard(text) {
            const textArea = document.createElement('textarea');
            textArea.value = text;
            textArea.style.position = 'fixed';  // Avoid scrolling to bottom
            document.body.appendChild(textArea);
            textArea.focus();
            textArea.select();

            try {
                const successful = document.execCommand('copy');
                if (successful) {
                    showNotification(`Copied: ${text}`);
                } else {
                    showNotification('Failed to copy text', false);
                }
            } catch (err) {
                console.error('Fallback copy failed:', err);
                showNotification('Failed to copy text', false);
            }

            document.body.removeChild(textArea);
        }

        // Event Listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Copy Referral Button
            document.getElementById('copyReferralBtn').addEventListener('click', copyReferralCode);

            // Mobile Menu Toggle
            document.getElementById('menu-btn').addEventListener('click', function() {
                const mobileMenu = document.getElementById('mobile-menu');
                this.classList.toggle('text-blue-600');
                mobileMenu.classList.toggle('hidden');
            });

            // Navigation buttons
            document.getElementById("homebtn33").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/home';
            });
            document.getElementById("homebtn333").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/home';
            });
            document.getElementById("imagebtn").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/home';
            });
            document.getElementById("aboutbtn33").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/about';
            });
            document.getElementById("aboutbtn333").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/about';
            });
            document.getElementById("assetsbtn33").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/assets';
            });
            document.getElementById("assetsbtn333").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/assets';
            });
            document.getElementById("teambtn2").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/team';
            });
            document.getElementById("assetsbtn").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/assets';
            });
            document.getElementById("profilebtn").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/profile';
            });
            document.getElementById("homebtn").addEventListener("click", function(e) {
                e.preventDefault();
                window.location.href = '/home';
            });

            // Format numbers with commas
            function formatNumberWithCommas(number) {
                return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }

            document.querySelectorAll('.format-amount').forEach(element => {
                const amount = parseFloat(element.textContent.trim());
                if (!isNaN(amount)) {
                    element.textContent = formatNumberWithCommas(amount);
                }
            });
        });
    </script>
</body>
</html>